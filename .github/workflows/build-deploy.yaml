name: Build + deploy

on:
  workflow_call:
    inputs:
      registry:
        description: The OCI registry to push to
        required: true
        type: string
      repository:
        description: The which repository to push to within the OCI registry
        required: true
        type: string
    secrets:
      registry-user:
        description: The OCI registry user
        required: true
      registry-password:
        description: The OCI registry user's password
        required: true
      build-args:
        description: Docker build args
        required: false

env:
  IMAGE_BASE: ${{ inputs.registry }}/${{ inputs.repository }}

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: build-deploy
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v5
      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.registry-user }}
          password: ${{ secrets.registry-password }}
      - name: Compute version tag
        id: compute_tag
        run: echo "tag=$(date +%s)" >> "$GITHUB_OUTPUT"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push image (${{ steps.compute_tag.outputs.tag }})
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_CHECKS_ANNOTATIONS: false
          DOCKER_BUILD_SUMMARY: false
          DOCKER_BUILD_RECORD_UPLOAD: false
        with:
          push: true
          tags: |
            ${{ env.IMAGE_BASE }}:latest
            ${{ env.IMAGE_BASE }}:${{ steps.compute_tag.outputs.tag }}
          build-args: ${{ secrets.build-args }}
          cache-from: type=gha,scope=docker-build
          cache-to: type=gha,scope=docker-build,mode=max
          outputs: type=oci,dest=./image.tar
      - name: Output summary
        run: echo '${{ env.IMAGE_BASE }}:${{ steps.compute_tag.outputs.tag }}' >> $GITHUB_STEP_SUMMARY
